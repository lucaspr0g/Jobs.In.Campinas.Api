@page "/vagas/nova/"
@attribute [Authorize]

<EditForm Model="CreateJobRequest" OnValidSubmit="HandleCreate">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-3">
		<label for="title">Título da vaga</label>
		<InputText Id="title" class="form-control" @bind-Value="CreateJobRequest.Title" />
		<ValidationMessage For="@(() => CreateJobRequest.Title)" />
	</div>
	<div class="mb-3">
		<label for="description">Descrição</label>
		<InputTextArea Id="description" type="text" class="form-control" @bind-Value="CreateJobRequest.Description" />
		<ValidationMessage For="@(() => CreateJobRequest.Description)" />
	</div>
	<div class="mb-3">
		<label for="requirements">Requisitos</label>
		<InputTextArea Id="requirements" type="text" class="form-control" @bind-Value="CreateJobRequest.Requirements" />
		<ValidationMessage For="@(() => CreateJobRequest.Requirements)" />
	</div>
	<div class="mb-3">
		<label for="contact">Contato</label>
		<InputTextArea Id="contact" type="text" class="form-control" @bind-Value="CreateJobRequest.Contact" />
		<ValidationMessage For="@(() => CreateJobRequest.Contact)" />
	</div>
	<div class="mb-3">
		<div class="row">
			<div class="col">
				<label for="location">Local</label>
				<InputText Id="location" type="text" class="form-control" @bind-Value="CreateJobRequest.Location" />
				<ValidationMessage For="@(() => CreateJobRequest.Location)" />
			</div>
			<div class="col">
				<label for="positions">Quantidade de Vagas</label>
				<InputNumber Id="positions" class="form-control" @bind-Value="CreateJobRequest.Positions" />
				<ValidationMessage For="@(() => CreateJobRequest.Positions)" />
			</div>
			<div class="col">
				<label for="salary">Salário</label>
				<InputNumber Id="salary" class="form-control" @bind-Value="CreateJobRequest.Salary" />
				<ValidationMessage For="@(() => CreateJobRequest.Salary)" />
			</div>
		</div>
	</div>
	<button type="submit" class="btn btn-primary">Salvar</button>
</EditForm>
<hr />

@code {
	private CreateJobRequest CreateJobRequest = new();

	private async Task HandleCreate()
	{
		try
		{
			PreloadService.Show(SpinnerColor.Primary);

			var (success, message) = await JobService.CreateJob(CreateJobRequest);

			if (success)
			{
				NavigationManager.NavigateTo("/conta");
			}
			else
			{
				ToastService.Notify(new(ToastType.Danger, message!));
			}
		}
		finally
		{
			PreloadService.Hide();
		}
	}
}
